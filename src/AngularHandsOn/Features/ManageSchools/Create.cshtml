@model SchoolModel
@{
    ViewData["Title"] = "Add School";
}
<h1>@ViewData["Title"]</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div asp-validation-summary="ModelOnly"></div>
    <div class="form-group">
        <label asp-for="Name" class="control-label col-md-2"></label>
        <input asp-for="Name" />
       <span asp-validation-for="Name"></span>
    </div>
    <div class="form-group">
        <label asp-for="Principal" class="control-label col-md-2"></label>
        <input asp-for="Principal" />
        <span asp-validation-for="Principal"></span>
    </div>    
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-default" />
    </div>
    <div>
        @Html.ActionLink("Back to list", "Index")
    </div>

}@section scripts {
    <script>
        //$.validator.addMethod("cannotbered",
        //    function (value, element, parameters) {
        //        return value.toUpperCase() !== "RED";
        //    });

        //$.validator.unobtrusive.adapters.add("cannotbered", [], function (options) {
        //    options.rules.cannotbered = {};
        //    options.messages["cannotbered"] = options.message;
        //});
    </script>
}